<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSLA on Blake Niemyjski</title><link>https://blakeniemyjski.com/tags/csla/</link><description>Recent content in CSLA on Blake Niemyjski</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 30 Jul 2010 17:39:00 -0600</lastBuildDate><atom:link href="https://blakeniemyjski.com/tags/csla/index.xml" rel="self" type="application/rss+xml"/><item><title>How-to: Use a Stored Procedure extended property to preserve custom logic in generated CSLA code.</title><link>https://blakeniemyjski.com/blog/how-to-use-a-stored-procedure-extended-property-to-preserve-custom-logic-in-generated-csla-code/</link><pubDate>Fri, 30 Jul 2010 17:39:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-use-a-stored-procedure-extended-property-to-preserve-custom-logic-in-generated-csla-code/</guid><description>In the previous article on how to use the partial methods in the CodeSmith Generator CSLA templates to preserve custom code mostly focused on the code side of things. For those of you who might be using Stored Procedures might be wondering&amp;hellip; How do I accomplish preserving my custom stored procedure logic? Don&amp;rsquo;t worry, CodeSmith already though of this and didn&amp;rsquo;t leave you out in the dark! The CSLA templates by default will not automatically execute the generated stored procedures but it can!</description></item><item><title>How-to: Use partial methods to preserve custom CSLA code and promote active regeneration.</title><link>https://blakeniemyjski.com/blog/how-to-use-partial-methods-to-preserve-custom-csla-code-and-promote-active-regeneration/</link><pubDate>Thu, 29 Jul 2010 17:39:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-use-partial-methods-to-preserve-custom-csla-code-and-promote-active-regeneration/</guid><description>One of the best features of code generation is the reality of being able to actively generate you code while preserving custom changes. This allows you to implement custom logic while constantly making changes to your metadata and getting the latest template changes. CodeSmith Generator has worked hard on making this happen in both the PLINQO and CSLA Templates. The CSLA templates offer many partial method overrides to make your life easier.</description></item><item><title>Breaking CSLA 4.0 property changes when using private backing fields.</title><link>https://blakeniemyjski.com/blog/breaking-csla-4.0-property-changes-when-using-private-backing-fields/</link><pubDate>Wed, 28 Jul 2010 17:39:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/breaking-csla-4.0-property-changes-when-using-private-backing-fields/</guid><description>I came across this bug last night, which was occurring right as CSLA 4 was released. It had to deal with the CodeSmith CSLA templates when you set **UseMemberVariables **to true. The error is quite obscure and not very intuitive as the signs of a bug are only found when you check to see if your business object IsValid. The scenario in this case is when you set a required managed property, the rules never fully evaluate the set value.</description></item><item><title>Unit testing the CodeSmith Generator CSLA generated template code</title><link>https://blakeniemyjski.com/blog/unit-testing-the-codesmith-generator-csla-generated-template-code/</link><pubDate>Thu, 08 Apr 2010 10:09:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/unit-testing-the-codesmith-generator-csla-generated-template-code/</guid><description>During the development of our CodeSmith GeneratorCSLA templates we have spent a lot time unit testing the generated code to ensure everything was working correctly.
In the future we would like to generate basic CRUD unit tests for any project. We decided to unit test the PetShop database to go along with our PetShop Sample application. We have a solution both in VB and C# that can be found in (Documents\CodeSmith\Samples\v5.</description></item><item><title>CodeSmith Generator CSLA Templates v1.0 released!</title><link>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-v1.0-released/</link><pubDate>Wed, 29 Jul 2009 05:40:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-v1.0-released/</guid><description>Over a week ago we released our new CodeSmith Generator CSLA Templates. I highly recommend everyone that uses CSLA to try them out as they will save you a ton of time. Also you&amp;rsquo;ll notice very quickly that it follows the CSLA best practices and has other features that you have been looking for like a working Data Access Layer (DAL). The best part is that you won&amp;rsquo;t have to worry about learning something new (the generated code) if you are already familiar with the CSLA Framework.</description></item><item><title>CodeSmith Generator CSLA Templates Part 2: The Quick Start</title><link>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-part-2-the-quick-start/</link><pubDate>Thu, 21 May 2009 09:00:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-part-2-the-quick-start/</guid><description>In Part 1: The Introduction was an overview of the CodeSmith Generator CSLA templates we are developing at CodeSmith. In this post, I am going to go over how to use the CSLA quick start and the new improvements resulting from customer feedback (Keep the feedback coming!).
First launch CodeSmith GeneratorStudio and under the Frameworks node open the CSLA Folder.
There are a couple of folders in the CodeSmith.CSLA folder</description></item><item><title>CodeSmith Generator CSLA Templates Part 1: The Introduction</title><link>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-part-1-the-introduction/</link><pubDate>Fri, 24 Apr 2009 08:46:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-part-1-the-introduction/</guid><description>I&amp;rsquo;ve been working on the CodeSmith Generator CSLA Templates periodically over the past few months at CodeSmith Tools. We have designed the templates from the ground up around the CSLA.NET Framework version 3.6.2. You might be thinking what&amp;rsquo;s the big deal it&amp;rsquo;s just another set of CSLA templates. You are mistaken, we have done a lot of research and gathered a lot of feedback. The end result is a streamlined CSLA experience that is highly customizable.</description></item><item><title>How-to: Rename your generated CSLA properties</title><link>https://blakeniemyjski.com/blog/how-to-rename-your-generated-csla-properties/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blakeniemyjski.com/blog/how-to-rename-your-generated-csla-properties/</guid><description>In the following example, I&amp;rsquo;ll show you how to use the CodeSmith Generator CSLA template&amp;rsquo;s powerful renaming options. Many of you might have a legacy database with those ugly prefixes, or things you wish you could refactor but just can&amp;rsquo;t. Luckily, you&amp;rsquo;re in luck as CodeSmith Generator is going to save the day once again! By default we will strip any invalid characters from your property names like prefixed digits etc&amp;hellip; Please note that these methods also work for renaming class names, but there are other methods that we will cover later that are is the recommended way to specify a class name.</description></item><item><title>How-to: Upgrade your existing CodeSmith Generator CSLA templates from version 3.8 to 4.0</title><link>https://blakeniemyjski.com/blog/how-to-upgrade-your-existing-codesmith-generator-csla-templates-from-version-3.8-to-4.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blakeniemyjski.com/blog/how-to-upgrade-your-existing-codesmith-generator-csla-templates-from-version-3.8-to-4.0/</guid><description>We recently released a new major version of the CodeSmith Generator CSLA templates that add support for many new features including Visual Studio 2010, CSLA 4.0 and Silverlight 4.0 support. They can be downloaded here. When upgrading to the templates and you are going from CSLA 3.8 to the latest CSLA 3.8.4 templates, there really aren&amp;rsquo;t any changes you need to make other than updating your CodeSmith Project File template location to point to the new version of the templates.</description></item></channel></rss>