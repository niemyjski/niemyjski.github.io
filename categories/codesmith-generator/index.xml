<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CodeSmith Generator on Blake Niemyjski</title><link>https://blakeniemyjski.com/categories/codesmith-generator/</link><description>Recent content in CodeSmith Generator on Blake Niemyjski</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 02 Jun 2011 19:15:00 -0600</lastBuildDate><atom:link href="https://blakeniemyjski.com/categories/codesmith-generator/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing GoTo Line functionality in a Visual Studio Custom Editor</title><link>https://blakeniemyjski.com/blog/implementing-goto-line-functionality-in-a-visual-studio-custom-editor/</link><pubDate>Thu, 02 Jun 2011 19:15:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/implementing-goto-line-functionality-in-a-visual-studio-custom-editor/</guid><description>While implementing a custom CodeSmith Generator Template Editor into Visual Studio 2010. I ran into an issue with getting the GoTo Line functionality to work properly. According to Microsoft this functionality needs to be provided by the custom editor as well as the GoTo Line dialog will need to be implemented as there is no &amp;ldquo;official public extension point&amp;rdquo;. This makes sense if you are taking over control of the editor but I feel that Microsoft should expose this dialog.</description></item><item><title>Announcing The CodeSmith Generator 6.0 Visual Studio Template Editor</title><link>https://blakeniemyjski.com/blog/announcing-the-codesmith-generator-6.0-visual-studio-template-editor/</link><pubDate>Thu, 02 Jun 2011 18:57:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/announcing-the-codesmith-generator-6.0-visual-studio-template-editor/</guid><description>We are very excited to announce that CodeSmith Generator 6.0 will feature a built-in Visual Studio CodeSmith Generator Template Editor on top of our existing Visual Studio Integration. The team has been hard at work integrating a new Template Editor into our Visual Studio integration story. Without further ado:
As you can see from the screenshot above, the CodeSmith Generator Template Editor is sitting inside of Visual Studio. This means you can use a familiar Development Interface to develop, edit and generate templates.</description></item><item><title>Extending the CodeSmith Generator PLINQO templates</title><link>https://blakeniemyjski.com/blog/extending-the-codesmith-generator-plinqo-templates/</link><pubDate>Tue, 18 Jan 2011 03:38:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/extending-the-codesmith-generator-plinqo-templates/</guid><description>The following guide will walk you through the basics on how-to extend the CodeSmith Generator PLINQO Templates to fit your custom development needs. In this example we will create a new Webpage for each entity that we generate. This page will contain a LinqDataSource control and an ASP.NET GridView control that will display data from a corresponding entity that we generated. I always recommend that you use the PLINQO API when writing templates that interact with code generated by PLINQO as this ensures that the code generated has the proper names and associations and or types.</description></item><item><title>How-to: Create a new Oracle User</title><link>https://blakeniemyjski.com/blog/how-to-create-a-new-oracle-user/</link><pubDate>Wed, 12 Jan 2011 13:09:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-create-a-new-oracle-user/</guid><description>Every now and then I need to create a new Oracle user to test the CodeSmith Generator OracleSchemaProvider. I wanted to outline the steps that I use to create a new user as well as change the password of an existing user.
The first step one needs to take is to create a new user but you may not remember your login information if it has been a while. At this point I always open up SQL Plus from the start menu and enter in the following user name when prompted.</description></item><item><title>How-to: Rename your generated CSLA properties</title><link>https://blakeniemyjski.com/blog/how-to-rename-your-generated-csla-properties/</link><pubDate>Tue, 03 Aug 2010 10:39:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-rename-your-generated-csla-properties/</guid><description>In the following example, I&amp;rsquo;ll show you how to use the CodeSmith Generator CSLA template&amp;rsquo;s powerful renaming options. Many of you might have a legacy database with those ugly prefixes, or things you wish you could refactor but just can&amp;rsquo;t. Luckily, you&amp;rsquo;re in luck as CodeSmith Generator is going to save the day once again! By default we will strip any invalid characters from your property names like prefixed digits etc&amp;hellip; Please note that these methods also work for renaming class names, but there are other methods that we will cover later that are is the recommended way to specify a class name.</description></item><item><title>How-to: Use a Stored Procedure extended property to preserve custom logic in generated CSLA code.</title><link>https://blakeniemyjski.com/blog/how-to-use-a-stored-procedure-extended-property-to-preserve-custom-logic-in-generated-csla-code/</link><pubDate>Fri, 30 Jul 2010 17:39:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-use-a-stored-procedure-extended-property-to-preserve-custom-logic-in-generated-csla-code/</guid><description>In the previous article on how to use the partial methods in the CodeSmith Generator CSLA templates to preserve custom code mostly focused on the code side of things. For those of you who might be using Stored Procedures might be wondering&amp;hellip; How do I accomplish preserving my custom stored procedure logic? Don&amp;rsquo;t worry, CodeSmith already though of this and didn&amp;rsquo;t leave you out in the dark! The CSLA templates by default will not automatically execute the generated stored procedures but it can!</description></item><item><title>How-to: Use partial methods to preserve custom CSLA code and promote active regeneration.</title><link>https://blakeniemyjski.com/blog/how-to-use-partial-methods-to-preserve-custom-csla-code-and-promote-active-regeneration/</link><pubDate>Thu, 29 Jul 2010 17:39:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-use-partial-methods-to-preserve-custom-csla-code-and-promote-active-regeneration/</guid><description>One of the best features of code generation is the reality of being able to actively generate you code while preserving custom changes. This allows you to implement custom logic while constantly making changes to your metadata and getting the latest template changes. CodeSmith Generator has worked hard on making this happen in both the PLINQO and CSLA Templates. The CSLA templates offer many partial method overrides to make your life easier.</description></item><item><title>Breaking CSLA 4.0 property changes when using private backing fields.</title><link>https://blakeniemyjski.com/blog/breaking-csla-4.0-property-changes-when-using-private-backing-fields/</link><pubDate>Wed, 28 Jul 2010 17:39:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/breaking-csla-4.0-property-changes-when-using-private-backing-fields/</guid><description>I came across this bug last night, which was occurring right as CSLA 4 was released. It had to deal with the CodeSmith CSLA templates when you set UseMemberVariables to true. The error is quite obscure and not very intuitive as the signs of a bug are only found when you check to see if your business object IsValid. The scenario in this case is when you set a required managed property, the rules never fully evaluate the set value.</description></item><item><title>How-to: Preserve column names in generated PLINQO entities</title><link>https://blakeniemyjski.com/blog/how-to-preserve-column-names-in-generated-plinqo-entities/</link><pubDate>Tue, 27 Jul 2010 17:39:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-preserve-column-names-in-generated-plinqo-entities/</guid><description>There may come a time where you need to rename a column in your generated entity for whatever reason. The following tip and trick article will show you how to quickly accomplish this.
Let&amp;rsquo;s assume you have a generated property for the column AccountId and it is defined like this:
[System.CodeDom.Compiler.GeneratedCode(&amp;#34;CodeSmith&amp;#34;, &amp;#34;5.0.0.0&amp;#34;)] private int _accountId = default(int); /// &amp;lt;summary&amp;gt; /// Gets the AccountId column value. /// &amp;lt;/summary&amp;gt; [System.Data.Linq.Mapping.Column(Name = &amp;#34;AccountId&amp;#34;, Storage = &amp;#34;_accountId&amp;#34;, DbType = &amp;#34;int NOT NULL IDENTITY&amp;#34;, IsPrimaryKey = true, IsDbGenerated = true, CanBeNull = false)] [System.</description></item><item><title>How-to: Upgrade your existing CodeSmith Generator CSLA templates from version 3.8 to 4.0</title><link>https://blakeniemyjski.com/blog/how-to-upgrade-your-existing-codesmith-generator-csla-templates-from-version-3.8-to-4.0/</link><pubDate>Mon, 26 Jul 2010 15:29:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-upgrade-your-existing-codesmith-generator-csla-templates-from-version-3.8-to-4.0/</guid><description>We recently released a new major version of the CodeSmith Generator CSLA templates that add support for many new features including Visual Studio 2010, CSLA 4.0 and Silverlight 4.0 support. They can be downloaded here. When upgrading to the templates and you are going from CSLA 3.8 to the latest CSLA 3.8.4 templates, there really aren&amp;rsquo;t any changes you need to make other than updating your CodeSmith Project File template location to point to the new version of the templates.</description></item><item><title>CodeSmith Generator supports Microsoft Visual Studio 2010 RTM!</title><link>https://blakeniemyjski.com/blog/codesmith-generator-supports-microsoft-visual-studio-2010-rtm/</link><pubDate>Mon, 19 Apr 2010 07:59:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/codesmith-generator-supports-microsoft-visual-studio-2010-rtm/</guid><description>We have been working with Microsoft over the past few months to ensure that CodeSmith Generator works with Microsoft Visual Studio 2010. The currently released version of CodeSmith Generator 5.x already supports Visual Studio 2010 Integration. Although the current support is titled as beta we have ran into very few Visual Studio 2010 bugs and will completely stand behind Visual Studio 2010.
Microsoft and Microsoft logo&amp;rsquo;s are trademarks of Microsoft Corporation.</description></item><item><title>Unit testing the CodeSmith Generator CSLA generated template code</title><link>https://blakeniemyjski.com/blog/unit-testing-the-codesmith-generator-csla-generated-template-code/</link><pubDate>Thu, 08 Apr 2010 10:09:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/unit-testing-the-codesmith-generator-csla-generated-template-code/</guid><description>During the development of our CodeSmith Generator CSLA templates we have spent a lot time unit testing the generated code to ensure everything was working correctly.
In the future we would like to generate basic CRUD unit tests for any project. We decided to unit test the PetShop database to go along with our PetShop Sample application. We have a solution both in VB and C# that can be found in (Documents\CodeSmith\Samples\v5.</description></item><item><title>How-to: Upgrade your existing PLINQO or CSLA CodeSmith Generator Templates</title><link>https://blakeniemyjski.com/blog/how-to-upgrade-your-existing-plinqo-or-csla-codesmith-generator-templates/</link><pubDate>Tue, 26 Jan 2010 02:35:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-upgrade-your-existing-plinqo-or-csla-codesmith-generator-templates/</guid><description>This article will help you upgrade your solutions templates safely and easily to the latest major or minor version. The latest templates can be found on our repository and the latest nightly build can be found here. The first thing to do is to download the template framework you wish to update.
After the templates have been downloaded and extracted. Remove or Replace the old templates with the new ones keeping the same folder structure or simply update your CodeSmith Generator Project File(s) to point to the updated templates.</description></item><item><title>How-to: Use Microsoft SQL Server CLR Functions and Functions in your CodeSmith Generator Templates</title><link>https://blakeniemyjski.com/blog/how-to-use-microsoft-sql-server-clr-functions-and-functions-in-your-codesmith-generator-templates/</link><pubDate>Mon, 25 Jan 2010 21:44:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-use-microsoft-sql-server-clr-functions-and-functions-in-your-codesmith-generator-templates/</guid><description>In a previousarticle, I had mentioned that we added support for Microsoft SQL Server CLR Stored procedures and Functionsin the release of CodeSmith Generator 5.2. Since then there has been a few questions since then on how to add this to your existing templates. The great news is, you can add the functionality in a few easy changes.
To enable SQL function support you need to set IncludeFunctions=&amp;quot;True&amp;quot; on any types inheriting from SchemaObjectBase (E.</description></item><item><title>How-to: Use Microsoft SQL Server Functions in your CodeSmith Generator Templates</title><link>https://blakeniemyjski.com/blog/how-to-use-microsoft-sql-server-functions-in-your-codesmith-generator-templates/</link><pubDate>Sun, 27 Dec 2009 21:51:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-use-microsoft-sql-server-functions-in-your-codesmith-generator-templates/</guid><description>CodeSmith Generator now supports Microsoft SQL ServerFunctions and Microsoft SQL Server CLR Functions with the release of CodeSmith Generator 5.2. I will quickly show you how to add Microsoft SQL Server Function support to your CodeSmith Generator template.
The first thing you need to do in order to use SQL Functions is to set the IncludeFunctions Property on any type that derives from SchemaObjectBase. The following property types are capable of showing functions when you add the IncludeFunctions=&amp;quot;True&amp;quot; setting to the property: CommandSchema, CommandSchemaCollection and DatabaseSchema.</description></item><item><title>It's the littlest of things that we do, that make CodeSmith Generator shine.</title><link>https://blakeniemyjski.com/blog/its-the-littlest-of-things-that-we-do-that-make-codesmith-generator-shine/</link><pubDate>Mon, 12 Oct 2009 07:25:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/its-the-littlest-of-things-that-we-do-that-make-codesmith-generator-shine/</guid><description>During each release of CodeSmith Generator, one thing we always do is test upgrade scenarios between each versions and check for backwards compatibility among other tests. Recently, I was amazed at how much change has taken place between CodeSmith Generator 4.x and the latest CodeSmith Generator 5.1.x release when it comes to the user interface. CodeSmith Generator has made a huge effort to make CodeSmith Generator rock solid, crazy fast, and easy to use.</description></item><item><title>CodeSmith Generator CSLA Templates v1.0 released!</title><link>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-v1.0-released/</link><pubDate>Wed, 29 Jul 2009 05:40:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-v1.0-released/</guid><description>Over a week ago we released our new CodeSmith Generator CSLA Templates. I highly recommend everyone that uses CSLA to try them out as they will save you a ton of time. Also you&amp;rsquo;ll notice very quickly that it follows the CSLA best practices and has other features that you have been looking for like a working Data Access Layer (DAL). The best part is that you won&amp;rsquo;t have to worry about learning something new (the generated code) if you are already familiar with the CSLA Framework.</description></item><item><title>How-to: Debugging CodeSmith Generator on Microsoft Windows 7</title><link>https://blakeniemyjski.com/blog/how-to-debugging-codesmith-generator-on-microsoft-windows-7/</link><pubDate>Wed, 03 Jun 2009 03:46:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-debugging-codesmith-generator-on-microsoft-windows-7/</guid><description>We have updated the Tips &amp;amp; Tricks: Debugging CodeSmith Generator with the changes needed to debug CodeSmith Generator on Microsoft Windows 7.
Here is the quick overview of what you need to-do to enable debugging on a Microsoft Windows 7 machine.
Update the Just-In-Time debugger setting DbgJITDebugLaunchSetting. The setting is found in the registry at HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework. Set the value of DbgJITDebugLaunchSetting to 2. If you are using a 64bit operating system then you must also set the same key DbgJITDebugLaunchSetting in this folder HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\.</description></item><item><title>CodeSmith Generator CSLA Templates Part 2: The Quick Start</title><link>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-part-2-the-quick-start/</link><pubDate>Thu, 21 May 2009 09:00:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-part-2-the-quick-start/</guid><description>In Part 1: The Introduction was an overview of the CodeSmith Generator CSLA templates we are developing at CodeSmith. In this post, I am going to go over how to use the CSLA quick start and the new improvements resulting from customer feedback (Keep the feedback coming!).
First launch CodeSmith Generator Studio and under the Frameworks node open the CSLA Folder.
There are a couple of folders in the CodeSmith.CSLA folder</description></item><item><title>CodeSmith Generator 5.1 Released</title><link>https://blakeniemyjski.com/blog/codesmith-generator-5.1-released/</link><pubDate>Tue, 12 May 2009 21:20:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/codesmith-generator-5.1-released/</guid><description>On May 6th we released CodeSmith Generator 5.1. This update brings in many welcoming changes, to name a few: .netTiers 2.3, PLINQO 3.0. Also CodeSmith Generator and now requires that the .NET 3.5 Framework is installed before CodeSmith Generator installs.
Final Updated installer to launch CodeSmith Generator after install. Loading a CSP on a new machine with an new connection string will cause TableSchema&amp;rsquo;s UI to be blank. Fixed a bug where removing a data source from Database Explorer wouldn&amp;rsquo;t permanently remove the data source.</description></item><item><title>CodeSmith Generator CSLA Templates Part 1: The Introduction</title><link>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-part-1-the-introduction/</link><pubDate>Fri, 24 Apr 2009 08:46:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/codesmith-generator-csla-templates-part-1-the-introduction/</guid><description>I&amp;rsquo;ve been working on the CodeSmith Generator CSLA Templates periodically over the past few months at CodeSmith Tools. We have designed the templates from the ground up around the CSLA.NET Framework version 3.6.2. You might be thinking what&amp;rsquo;s the big deal it&amp;rsquo;s just another set of CSLA templates. You are mistaken, we have done a lot of research and gathered a lot of feedback. The end result is a streamlined CSLA experience that is highly customizable.</description></item><item><title>.netTiers 2.3.0 Beta 2 Released!</title><link>https://blakeniemyjski.com/blog/nettiers-2.3.0-beta-2-released/</link><pubDate>Sun, 30 Nov 2008 11:13:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/nettiers-2.3.0-beta-2-released/</guid><description>The .netTiers team released .netTiers 2.3.0 Beta 2 today. .netTiers 2.3.0 is a maintenance release containing many bug fixes and patches. We have also added various requested features like Enterprise Library version 4.1 as well as support for Visual Studio 2008. I would have to say the biggest and most requested feature that went into .netTiers 2.3.0 Beta 2 was support for Oracle!
Here is a list of all the changes since .</description></item><item><title>How-to: Connect to an Oracle Database with CodeSmith Generator</title><link>https://blakeniemyjski.com/blog/how-to-connect-to-an-oracle-database-with-codesmith-generator/</link><pubDate>Tue, 04 Nov 2008 03:20:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-connect-to-an-oracle-database-with-codesmith-generator/</guid><description>Sometimes User interfaces can&amp;rsquo;t provide a solution for every scenario where you might need additional functionality by customization. One area where you might come across this is if you&amp;rsquo;re trying to use Oracle on an 64bit machine or in a custom Oracle instance. If you are running Windows XP there is a good chance you can get away with using the built in Connection Editor and use CodeSmith to connect to your Oracle Schema.</description></item><item><title>How-to: Set the File Encoding of an CodeSmith Generator Template</title><link>https://blakeniemyjski.com/blog/how-to-set-the-file-encoding-of-an-codesmith-generator-template/</link><pubDate>Thu, 23 Oct 2008 05:26:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-set-the-file-encoding-of-an-codesmith-generator-template/</guid><description>There may be a time when you need to use Extended ASCII Codes in your CodeSmith Generator Templates. If you have already tried using them into your template you have more than likely ran into the following problem. When a user first creates a template an Encoding attribute is not added by default to the CodeTemplate directive. So when a user starts adding characters in the Extended ASCII range, they will run into the following problem without first setting the encoding attribute.</description></item><item><title>How-to: Manual uninstall CodeSmith Generator</title><link>https://blakeniemyjski.com/blog/how-to-manual-uninstall-codesmith-generator/</link><pubDate>Fri, 22 Aug 2008 03:39:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-manual-uninstall-codesmith-generator/</guid><description>I&amp;rsquo;ve come across a few issues, where a CodeSmith Generator install might become corrupt when going from a beta to RTM. The following guide will show you how to successfully remove CodeSmith Generator from your computer. Please allow 10 to 15 minutes of your time to complete this guide.
Please note: This guide could be used to uninstall other .net applications.
You will need to download the Windows Installer CleanUp Utility.</description></item><item><title>CodeSmith Generator 5.0 RTM available now</title><link>https://blakeniemyjski.com/blog/codesmith-generator-5.0-rtm-available-now/</link><pubDate>Tue, 19 Aug 2008 12:37:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/codesmith-generator-5.0-rtm-available-now/</guid><description>Over the past year the CodeSmith team has been hard at work on CodeSmith Generator 5.0. This release contains many fixes, performance enhancements and other enhancements over the previous versions. Below is a list of some of the major changes between CodeSmith Generator 5.0 and CodeSmith Generator 4.0. I have highlighted some of my favorites below.
5.0.0 Final Added a tab for editing variables in the CodeSmith Project settings dialog.</description></item><item><title>Speaking at the Madison .NET User Group</title><link>https://blakeniemyjski.com/blog/speaking-at-the-madison.net-user-group/</link><pubDate>Wed, 30 Jul 2008 00:00:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/speaking-at-the-madison.net-user-group/</guid><description>Date: Wednesday, July 30, doors open at 5pm Topic: Code Generation Speaker: Blake Niemyjski Location: Herzing College, East Madison Campus, 5218 East Terrace Drive, 53718
Description Blake Niemyjski is a full time student studying Computer Science and Mathematics. His previous studies included RSA Encryption and Number Theory. This coming year he will be attending UW-Madison to continue his education. Since the late 90&amp;rsquo;s Blake has had a curiosity in developing software with the goal of making software that helps the masses accomplish tasks.</description></item><item><title>How-to: Reset the CodeSmith Generator Sample Templates</title><link>https://blakeniemyjski.com/blog/how-to-reset-the-codesmith-generator-sample-templates/</link><pubDate>Wed, 30 Apr 2008 12:11:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-reset-the-codesmith-generator-sample-templates/</guid><description>A tip that not a lot of people know is that the samples are not reset during every new release of CodeSmith Generator. New versions of templates are added to the CodeSmith Generator template directory for the Major and Minor versions. However that is not the case for regular builds (identified via the assembly build number) for example: 5.3.x. Please note that this will also work if you want to reset your templates for the fun of it.</description></item><item><title>How-to: Reset a CodeSmith Generator license.</title><link>https://blakeniemyjski.com/blog/how-to-reset-a-codesmith-generator-license/</link><pubDate>Tue, 15 Apr 2008 09:26:00 -0600</pubDate><guid>https://blakeniemyjski.com/blog/how-to-reset-a-codesmith-generator-license/</guid><description>Every once in a while you might run into a licensing problem when using CodeSmith Generator. This can be when the Visual Studio add-in becomes corrupted, or you encounter some kind of licensing problem and you have problems activating. You can fix these related problems by resetting the license file and reactivating your copy of CodeSmith Generator.
First you will need to exit all CodeSmith Generator related applications (CodeSmith Generator Studio, Visual Studio) and follow the steps below.</description></item></channel></rss>